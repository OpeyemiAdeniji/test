name: Update Port with YouTube Playlist Data
on:
  workflow_dispatch:
    inputs:
      playlistid:
        description: 'ID of the YouTube playlist'
        required: true
      port_context:
        description: 'Port context payload'
        required: true

jobs:
  update_port:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Create Python script
        run: |
          cat << 'EOF' > fetch_youtube.py
          import os
          import requests
          import json
          from datetime import datetime

          # Constants and setup
          YOUTUBE_API_KEY = os.environ.get('YOUTUBE_API_KEY')
          playlist_id = os.environ.get('PLAYLIST_ID')
          PORT_CLIENT_ID = os.environ.get('PORT_CLIENT_ID')
          PORT_CLIENT_SECRET = os.environ.get('PORT_CLIENT_SECRET')
          API_URL = 'https://api.getport.io/v1'

          # Validate environment variables
          if not all([YOUTUBE_API_KEY, playlist_id, PORT_CLIENT_ID, PORT_CLIENT_SECRET]):
              raise ValueError("Missing required environment variables")
          
          credentials = {
              'clientId': PORT_CLIENT_ID.strip(),  # Remove any whitespace
              'clientSecret': PORT_CLIENT_SECRET.strip()  # Remove any whitespace
          }

          # Rest of your Python script remains the same...
          EOF

      - name: Fetch and Process YouTube Data
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          PLAYLIST_ID: ${{ inputs.playlistid }}
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Debug secrets (safely)
          echo "Checking if secrets are set (not printing values):"
          [ -n "$YOUTUBE_API_KEY" ] && echo "YOUTUBE_API_KEY is set" || echo "YOUTUBE_API_KEY is missing"
          [ -n "$PORT_CLIENT_ID" ] && echo "PORT_CLIENT_ID is set" || echo "PORT_CLIENT_ID is missing"
          [ -n "$PORT_CLIENT_SECRET" ] && echo "PORT_CLIENT_SECRET is set" || echo "PORT_CLIENT_SECRET is missing"
          
          python fetch_youtube.py
