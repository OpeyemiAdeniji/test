name: Update Port with YouTube Playlist Data

on:
  workflow_dispatch:
    inputs:
      playlistid:
        description: 'ID of the YouTube playlist'
        required: true
      port_context:
        description: 'Port context payload'
        required: true

jobs:
  process_videos:
    runs-on: ubuntu-latest
    env:
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
      PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
      PORT_RUN_ID: ${{ fromJson(inputs.port_context).runId }}
      PLAYLIST_ID: ${{ inputs.playlistid }}
    
    steps:
      - name: Get Port access token
        id: get_token
        run: |
          response=$(curl -s -X POST "https://api.getport.io/v1/auth/access_token" \
            -H "Content-Type: application/json" \
            -d '{
              "clientId": "'"$PORT_CLIENT_ID"'",
              "clientSecret": "'"$PORT_CLIENT_SECRET"'"
            }')
          
          token=$(echo "$response" | jq -r '.accessToken')
          if [ -z "$token" ] || [ "$token" = "null" ]; then
            echo "Failed to get access token"
            exit 1
          fi
          echo "PORT_TOKEN=$token" >> $GITHUB_ENV

      - name: Process videos
        run: |
          next_page_token=""
          processed_count=0
          
          # Log starting process
          curl -X POST "https://api.getport.io/v1/actions/runs/$PORT_RUN_ID/logs" \
            -H "Authorization: Bearer $PORT_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"message": "Starting video processing"}'
          
          while :; do
            url="https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&playlistId=$PLAYLIST_ID&key=$YOUTUBE_API_KEY${next_page_token:+&pageToken=$next_page_token}"
            response=$(curl -s "$url")
            
            # Process each video
            echo "$response" | jq -r '.items[].snippet.resourceId.videoId' | while read -r video_id; do
              video_details=$(curl -s "https://www.googleapis.com/youtube/v3/videos?part=snippet,contentDetails,statistics&id=$video_id&key=$YOUTUBE_API_KEY")
              
              # Create video entity
              video_entity=$(echo "$video_details" | jq -r --arg playlist_id "$PLAYLIST_ID" '.items[0] | {
                identifier: .id,
                title: .snippet.title,
                properties: {
                  videoId: .id,
                  title: .snippet.title,
                  duration: .contentDetails.duration,
                  viewCount: (.statistics.viewCount | tonumber // 0),
                  likeCount: (.statistics.likeCount | tonumber // 0)
                },
                relations: {
                  belongs_to_playlist: $playlist_id
                }
              }')

              # Upload to Port
              upload_response=$(curl -s -w "\n%{http_code}" -X POST "https://api.getport.io/v1/blueprints/video/entities?upsert=true" \
                -H "Authorization: Bearer $PORT_TOKEN" \
                -H "Content-Type: application/json" \
                -d "$video_entity")
              
              http_code=$(echo "$upload_response" | tail -n1)
              if [[ "$http_code" != "2"* ]]; then
                echo "Failed to upload video entity. Response: $upload_response"
                curl -X POST "https://api.getport.io/v1/actions/runs/$PORT_RUN_ID/logs" \
                  -H "Authorization: Bearer $PORT_TOKEN" \
                  -H "Content-Type: application/json" \
                  -d "{\"message\": \"Failed to upload video: $video_id\"}"
                exit 1
              fi

              ((processed_count++))
              
              # Report progress every 10 videos
              if ((processed_count % 10 == 0)); then
                curl -X POST "https://api.getport.io/v1/actions/runs/$PORT_RUN_ID/logs" \
                  -H "Authorization: Bearer $PORT_TOKEN" \
                  -H "Content-Type: application/json" \
                  -d "{\"message\": \"Processed $processed_count videos\"}"
              fi
            done
            
            next_page_token=$(echo "$response" | jq -r '.nextPageToken // empty')
            [ -z "$next_page_token" ] && break
          done

          # Final progress report
          curl -X POST "https://api.getport.io/v1/actions/runs/$PORT_RUN_ID/logs" \
            -H "Authorization: Bearer $PORT_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"message\": \"Completed processing $processed_count videos\"}"

      - name: Report final status
        uses: port-labs/port-github-action@v1
        if: always()
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: "YouTube playlist ingestion complete"
          status: ${{ job.status == 'success' && 'SUCCESS' || 'FAILURE' }}
          baseUrl: https://api.getport.io
