name: Update Port with YouTube Playlist Data

on:
  workflow_dispatch:
    inputs:
      playlistid:
        description: 'ID of the YouTube playlist'
        required: true
      port_context:
        description: 'Port context payload'
        required: true

jobs:
  update_port:
    runs-on: ubuntu-latest
    env:
      PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
      PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PORT_RUN_ID: ${{ fromJson(inputs.port_context).runId }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Create Python script
        run: |
          cat << 'EOF' > fetch_youtube.py
          # Your Python code here
          EOF

      - name: Fetch and Modify YouTube Playlist Data
        id: fetch_modify_data
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          PLAYLIST_ID: ${{ inputs.playlistid }}
        run: python fetch_youtube.py

      - name: Create Playlist in Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: UPSERT
          identifier: ${{ steps.fetch_modify_data.outputs.playlist_playlistId }}
          blueprint: playlist
          properties: |-
            {
              "playlistId": "${{ steps.fetch_modify_data.outputs.playlist_playlistId }}",
              "title": "${{ steps.fetch_modify_data.outputs.playlist_title }}",
              "description": "${{ steps.fetch_modify_data.outputs.playlist_description }}",
              "thumbnailUrl": "${{ steps.fetch_modify_data.outputs.playlist_thumbnailUrl }}",
              "videoCount": ${{ steps.fetch_modify_data.outputs.playlist_videoCount }},
              "created_at": "${{ steps.fetch_modify_data.outputs.playlist_created_at }}"
            }
        env:
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}

      - name: Upsert Video Data into Port
        if: steps.fetch_modify_data.outputs.video_count > 0
        run: |
          for i in $(seq 0 $((steps.fetch_modify_data.outputs.video_count - 1)));
          do
            VIDEO_ID=$(cat $GITHUB_OUTPUT | grep videoId_$i | cut -d '=' -f2)
            VIDEO_TITLE=$(cat $GITHUB_OUTPUT | grep title_$i | cut -d '=' -f2)
            VIDEO_DESCRIPTION=$(cat $GITHUB_OUTPUT | grep description_$i | cut -d '=' -f2)
            VIDEO_THUMBNAIL_URL=$(cat $GITHUB_OUTPUT | grep thumbnailUrl_$i | cut -d '=' -f2)
            VIDEO_DURATION=$(cat $GITHUB_OUTPUT | grep duration_$i | cut -d '=' -f2)
            VIDEO_VIEW_COUNT=$(cat $GITHUB_OUTPUT | grep viewCount_$i | cut -d '=' -f2)
            VIDEO_LIKE_COUNT=$(cat $GITHUB_OUTPUT | grep likeCount_$i | cut -d '=' -f2)
            VIDEO_COMMENT_COUNT=$(cat $GITHUB_OUTPUT | grep commentCount_$i | cut -d '=' -f2)

            echo "Upserting video with ID: $VIDEO_ID"
            echo "Video Title: $VIDEO_TITLE"
            
            uses: port-labs/port-github-action@v1
            with:
              clientId: ${{ secrets.PORT_CLIENT_ID }}
              clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
              baseUrl: https://api.getport.io
              operation: UPSERT
              identifier: $VIDEO_ID
              blueprint: video
              properties: |-
                {
                  "videoId": "$VIDEO_ID",
                  "title": "$VIDEO_TITLE",
                  "description": "$VIDEO_DESCRIPTION",
                  "thumbnailUrl": "$VIDEO_THUMBNAIL_URL",
                  "duration": "$VIDEO_DURATION",
                  "viewCount": $VIDEO_VIEW_COUNT,
                  "likeCount": $VIDEO_LIKE_COUNT,
                  "commentCount": $VIDEO_COMMENT_COUNT
                }
            env:
              PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
              PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
          done
